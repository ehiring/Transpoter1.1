@model TransportService.Web.Models.Masters.ResetPasswordModel
@{
    ViewBag.Title = "Reset Password";
}


<head>



    @*Date 17-1-2020: New UI for Login*@

    <link href="~/assets/css/normalize.css" rel="stylesheet" />
    <link href="~/assets/css/materialize.min.css" rel="stylesheet" />
    <link href="~/assets/css/loginStyle.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">


    @*Date:17-1-2020 :  New LoginUI*@
    <script src="~/assets/js/materialize.min.js"></script>
    <script src="~/assets/js/routie.min.js"></script>
    <script src="~/assets/js/loginScript.js"></script>
    <script src="~/assets/js/jquery-3.3.1.min.js"></script>


    <style>
        .dropbtn {
            background-color: #3498DB;
            color: white;
            padding: 16px;
            font-size: 16px;
            border: none;
            cursor: pointer;
        }

            .dropbtn:hover,
            .dropbtn:focus {
                background-color: #2980B9;
            }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .reg-content {
            display: none;
            position: absolute;
            background-color: #ddd;
            min-width: 180px;
            overflow: auto;
            box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
            z-index: 1;
        }

            .reg-content a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: block;
                border-bottom: 2px solid #f5f0ed;
            }

                .reg-content a:last-child {
                    border-bottom: none;
                }

                .reg-content a:hover {
                    background-color: #CE5B0D;
                }

        .dropdown a:hover {
            background-color: #ddd;
        }

        .show {
            display: block;
        }

        /* The container */
        .container1 {
            display: block !important;
            position: relative;
            padding-left: 25px !important;
            margin-bottom: 2px !important;
            cursor: pointer;
            font-size: 20px;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            margin-top: -10px !important;
        }
            /* .container1 input:checked{
            color: #f97316 !important;
        } */

            /* Hide the browser's default radio button */
            .container1 input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
            }

        /* Create a custom radio button */
        .checkmark {
            position: absolute;
            top: 5px;
            left: 0;
            height: 18px;
            width: 18px;
            background-color: #eee;
            border-radius: 50%;
        }

        /* On mouse-over, add a grey background color */
        .container1:hover input ~ .checkmark {
            background-color: #ccc;
        }

        /* When the radio button is checked, add a blue background */
        .container1 input:checked ~ .checkmark {
            background-color: #CE5B0D;
        }

        /* Create the indicator (the dot/circle - hidden when not checked) */
        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        /* Show the indicator (dot/circle) when checked */
        .container1 input:checked ~ .checkmark:after {
            display: block;
        }

        /* Style the indicator (dot/circle) */
        .container1 .checkmark:after {
            top: 5px;
            left: 5px;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: white;
        }
    </style>
</head>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row gmailStyle" style="margin-top:-300px !important;margin-bottom:50px !important;">
        <div class="container-fluid">
            <div class="valign-wrapper screenHeight">
                <div class="col card s12 m8 l6 xl4 autoMargin setMaxWidth ">
                    <div class="row hidden" id="progress-bar">
                        <div class="progress mar-no">
                            <div class="indeterminate"></div>
                        </div>
                    </div>
                    <div class="clearfix mar-all pad-all"></div>

                    <!-- <img src="images/Googlelogo.png" class="logoImage" /> -->
                    <h4 style="margin-left: 130px;color: #f97316;margin-top: -15px;">Bhadaa.com</h4>
                    <h5 class="center-align mar-top mar-bottom formTitle">Account Recovery</h5>
                    @*<p class="center-align pad-no mar-no">
                            to continue to
                            <a href="bhadaa.html"
                               style="text-decoration-line: underline;text-decoration-style:solid;">bhadaa.com</a>
                        </p>*@

                    <div class="clearfix mar-all pad-all"></div>

                    <div id="formContainer" class="goRight" style="margin-top: -30px;">

                        <div class="loginForm">
                            <div class="input-fields-div autoMargin">
                                @*<div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>*@

                                <div id="divPassword" class="input-field ">
                                    @*<input id="txt_Password" type="password" class="validate ">*@


                                    @Html.PasswordFor(a => a.NewPassword, new { @class = "validate", @id = "txt_Password" })
                                    @Html.ValidationMessageFor(m => m.NewPassword, "", new { @style = "color:Red;font-size:14px;" })
                                    <label for="txt_Password">New Password</label>
                                    <a href="javascript:void(0)" class="showPassword" onclick="showPassword()">
                                        <i class="material-icons md-18">visibility</i>
                                    </a>
                                </div>





                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@


                                <div id="divConfirmPassword" class="input-field ">
                                    @*<input id="txt_Password" type="password" class="validate ">*@


                                    @Html.PasswordFor(a => a.ConfirmPassword, new { @class = "validate", @id = "txt_ConfirmPassword" })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @style = "color:Red;font-size:14px;" })
                                    <label for="txt_ConfirmPassword">Confirm Password</label>
                                    <a href="javascript:void(0)" class="showPassword" onclick="showPassword()">
                                        <i class="material-icons md-18">visibility</i>
                                    </a>
                                </div>




                                <div class="form-group">
                                    @Html.HiddenFor(a => a.ResetCode)
                                </div>
                            </div>
                            <div class="input-fields-div autoMargin right-align">
                                <!-- <a href="#bhadaa.html" class="loginNextBtn waves-effect waves-light btn">Get OTP</a> -->
                                <button type="submit" id="btnLogin"
                                        class="loginBtn waves-effect waves-light btn show" style="float:right !important;">
                                    <a class="loginNow" style="color: #fff;">Submit</a>
                                </button>
                            </div>

                        </div>


                        <div class="clearfix"></div>
                    </div>


                    <div class="clearfix mar-all pad-all"></div>
                </div>
            </div>
        </div>
    </div>
}

@*@section Scripts{
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    }*@

    <script>
        /* When the user clicks on the button,
        toggle between hiding and showing the dropdown content */
        function drpFunction() {
            document.getElementById("regDropdown").classList.toggle("show");
        }

        // Close the dropdown if the user clicks outside of it
        window.onclick = function (event) {
            if (!event.target.matches('.dropbtn1')) {
                var dropdowns1 = document.getElementsByClassName("reg-content");
                var i;
                for (i = 0; i < dropdowns1.length; i++) {
                    var openDropdown = dropdowns1[i];
                    if (openDropdown.classList.contains('show')) {
                        openDropdown.classList.remove('show');
                    }
                }
            }
        }
    </script>